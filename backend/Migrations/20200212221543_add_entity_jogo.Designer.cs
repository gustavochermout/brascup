// <auto-generated />
using BrasCup.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace backend.Migrations
{
    [DbContext(typeof(BrasCupContext))]
    [Migration("20200212221543_add_entity_jogo")]
    partial class add_entity_jogo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BrasCup.Models.Inscricao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("TimeId")
                        .HasColumnType("integer");

                    b.Property<int>("TorneioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TimeId");

                    b.HasIndex("TorneioId");

                    b.ToTable("Inscricao");
                });

            modelBuilder.Entity("BrasCup.Models.Jogador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Idade")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int>("TimeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TimeId");

                    b.ToTable("Jogador");
                });

            modelBuilder.Entity("BrasCup.Models.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("GolsTimeCasa")
                        .HasColumnType("integer");

                    b.Property<int>("GolsTimeVisitante")
                        .HasColumnType("integer");

                    b.Property<int>("PontuacaoTimeCasa")
                        .HasColumnType("integer");

                    b.Property<int>("PontuacaoTimeVisitante")
                        .HasColumnType("integer");

                    b.Property<int>("TimeCasaId")
                        .HasColumnType("integer");

                    b.Property<int>("TimeVisitanteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TimeCasaId");

                    b.HasIndex("TimeVisitanteId");

                    b.ToTable("Jogo");
                });

            modelBuilder.Entity("BrasCup.Models.Time", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Tecnico")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Time");
                });

            modelBuilder.Entity("BrasCup.Models.Torneio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Torneio");
                });

            modelBuilder.Entity("BrasCup.Models.Inscricao", b =>
                {
                    b.HasOne("BrasCup.Models.Time", "time")
                        .WithMany()
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrasCup.Models.Torneio", "torneio")
                        .WithMany()
                        .HasForeignKey("TorneioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BrasCup.Models.Jogador", b =>
                {
                    b.HasOne("BrasCup.Models.Time", "time")
                        .WithMany()
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BrasCup.Models.Jogo", b =>
                {
                    b.HasOne("BrasCup.Models.Time", "timeCasa")
                        .WithMany()
                        .HasForeignKey("TimeCasaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrasCup.Models.Time", "timeVisitante")
                        .WithMany()
                        .HasForeignKey("TimeVisitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
